<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-07T15:30:30 IST" name="Suite" finished-at="2023-01-07T15:31:57 IST" duration-ms="87135">
    <groups>
    </groups>
    <test started-at="2023-01-07T15:30:30 IST" name="Test" finished-at="2023-01-07T15:31:57 IST" duration-ms="87135">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:08 IST" name="setup" finished-at="2023-01-07T15:31:15 IST" duration-ms="6944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCrendetials()[pri:1, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:15 IST" name="loginWithValidCrendetials" finished-at="2023-01-07T15:31:18 IST" duration-ms="3323" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertFalse(Assert.java:78)
at org.testng.Assert.assertFalse(Assert.java:88)
at tests.LoginTest.loginWithValidCrendetials(LoginTest.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCrendetials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:19 IST" name="tearDown" finished-at="2023-01-07T15:31:20 IST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:20 IST" name="setup" finished-at="2023-01-07T15:31:27 IST" duration-ms="7314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidCredentials()[pri:2, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:27 IST" name="loginWithInvalidCredentials" finished-at="2023-01-07T15:31:31 IST" duration-ms="4215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@5812f68b]" started-at="2023-01-07T15:31:31 IST" name="tearDown" finished-at="2023-01-07T15:31:32 IST" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:30:30 IST" name="setup" finished-at="2023-01-07T15:30:47 IST" duration-ms="16908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithMandatoryFields()[pri:1, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:30:47 IST" name="registerWithMandatoryFields" finished-at="2023-01-07T15:30:53 IST" duration-ms="6884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:30:54 IST" name="tearDown" finished-at="2023-01-07T15:30:54 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:30:54 IST" name="setup" finished-at="2023-01-07T15:31:01 IST" duration-ms="6886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithAllFields()[pri:2, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:31:01 IST" name="registerWithAllFields" finished-at="2023-01-07T15:31:07 IST" duration-ms="5797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@7ae42ce3]" started-at="2023-01-07T15:31:07 IST" name="tearDown" finished-at="2023-01-07T15:31:08 IST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
      <class name="tests.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:32 IST" name="setup" finished-at="2023-01-07T15:31:39 IST" duration-ms="6678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithValidProductName()[pri:1, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:39 IST" name="searchWithValidProductName" finished-at="2023-01-07T15:31:40 IST" duration-ms="1386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:40 IST" name="tearDown" finished-at="2023-01-07T15:31:41 IST" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:41 IST" name="setup" finished-at="2023-01-07T15:31:47 IST" duration-ms="5860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithInvalidProductName()[pri:2, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:47 IST" name="searchWithInvalidProductName" finished-at="2023-01-07T15:31:48 IST" duration-ms="1294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:48 IST" name="tearDown" finished-at="2023-01-07T15:31:49 IST" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:49 IST" name="setup" finished-at="2023-01-07T15:31:55 IST" duration-ms="5819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchByNotProvidingAnyProductName()[pri:3, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:55 IST" name="searchByNotProvidingAnyProductName" finished-at="2023-01-07T15:31:56 IST" duration-ms="1264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNotProvidingAnyProductName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@4426bff1]" started-at="2023-01-07T15:31:56 IST" name="tearDown" finished-at="2023-01-07T15:31:57 IST" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
